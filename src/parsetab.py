
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'A AN ARE BY COLON COMMA DIVIDED FALSE ID IS IS_UP MINUS NEGATIVE NUMBER OF PERIOD PLUS QUEST THE TIMES TRUE WHATprogram : program sentence\n               | sentencesentence : expression PERIOD\n                | definition PERIOD\n                | modification PERIOD\n                | question QUESTexpression : termexpression : expression PLUS term\n                  | expression MINUS term\n        term      : term TIMES factor\n                  | term DIVIDED BY factorterm : factorfactor : numberdefinition : id IS A id\n                  | id IS AN id\n                  | id ARE COLON list\n                  | id IS COLON list\n                  | id IS datatypemodification : id OF id IS entity\n                    | id OF id IS listquestion : WHAT IS id\n                | WHAT ARE list\n                | WHAT IS THE id OF id\n                | WHAT IS id OF idquestion : IS_UP entity datatypeentity : id\n              | datatypedatatype : number\n                | boollist : entity COMMA list\n            | entitybool : TRUE\n            | FALSEnumber : NUMBER\n              | NEGATIVE NUMBERid : ID'
    
_lr_action_items = {'WHAT':([0,1,2,16,17,20,21,22,],[9,9,-2,-1,-3,-4,-5,-6,]),'IS_UP':([0,1,2,16,17,20,21,22,],[10,10,-2,-1,-3,-4,-5,-6,]),'ID':([0,1,2,10,16,17,20,21,22,27,28,29,42,43,44,46,49,58,59,61,65,],[12,12,-2,12,-1,-3,-4,-5,-6,12,12,12,12,12,12,12,12,12,12,12,12,]),'NUMBER':([0,1,2,10,12,14,15,16,17,18,19,20,21,22,23,25,29,30,31,32,33,34,35,36,37,41,44,46,58,61,],[14,14,-2,14,-36,-34,37,-1,-3,14,14,-4,-5,-6,14,14,14,14,-27,-26,-28,-29,-32,-33,-35,14,14,14,14,14,]),'NEGATIVE':([0,1,2,10,12,14,16,17,18,19,20,21,22,23,25,29,30,31,32,33,34,35,36,37,41,44,46,58,61,],[15,15,-2,15,-36,-34,-1,-3,15,15,-4,-5,-6,15,15,15,15,-27,-26,-28,-29,-32,-33,-35,15,15,15,15,15,]),'$end':([1,2,16,17,20,21,22,],[0,-2,-1,-3,-4,-5,-6,]),'PERIOD':([3,4,5,7,11,12,13,14,31,32,33,34,35,36,37,38,39,40,45,51,53,54,55,56,57,62,63,66,],[17,20,21,-7,-12,-36,-13,-34,-27,-26,-28,-29,-32,-33,-35,-8,-9,-10,-18,-31,-11,-14,-15,-17,-16,-19,-20,-30,]),'PLUS':([3,7,11,13,14,37,38,39,40,53,],[18,-7,-12,-13,-34,-35,-8,-9,-10,-11,]),'MINUS':([3,7,11,13,14,37,38,39,40,53,],[19,-7,-12,-13,-34,-35,-8,-9,-10,-11,]),'QUEST':([6,12,14,31,32,33,34,35,36,37,48,50,51,52,64,66,67,],[22,-36,-34,-27,-26,-28,-29,-32,-33,-35,-21,-22,-31,-25,-24,-30,-23,]),'TIMES':([7,11,13,14,37,38,39,40,53,],[23,-12,-13,-34,-35,23,23,-10,-11,]),'DIVIDED':([7,11,13,14,37,38,39,40,53,],[24,-12,-13,-34,-35,24,24,-10,-11,]),'IS':([8,9,12,47,],[25,28,-36,58,]),'ARE':([8,9,12,],[26,29,-36,]),'OF':([8,12,48,60,],[27,-36,59,65,]),'TRUE':([10,12,14,25,29,30,31,32,33,34,35,36,37,44,46,58,61,],[35,-36,-34,35,35,35,-27,-26,-28,-29,-32,-33,-35,35,35,35,35,]),'FALSE':([10,12,14,25,29,30,31,32,33,34,35,36,37,44,46,58,61,],[36,-36,-34,36,36,36,-27,-26,-28,-29,-32,-33,-35,36,36,36,36,]),'COMMA':([12,14,31,32,33,34,35,36,37,51,62,],[-36,-34,-27,-26,-28,-29,-32,-33,-35,61,61,]),'BY':([24,],[41,]),'A':([25,],[42,]),'AN':([25,],[43,]),'COLON':([25,26,],[44,46,]),'THE':([28,],[49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'sentence':([0,1,],[2,16,]),'expression':([0,1,],[3,3,]),'definition':([0,1,],[4,4,]),'modification':([0,1,],[5,5,]),'question':([0,1,],[6,6,]),'term':([0,1,18,19,],[7,7,38,39,]),'id':([0,1,10,27,28,29,42,43,44,46,49,58,59,61,65,],[8,8,32,47,48,32,54,55,32,32,60,32,64,32,67,]),'factor':([0,1,18,19,23,41,],[11,11,11,11,40,53,]),'number':([0,1,10,18,19,23,25,29,30,41,44,46,58,61,],[13,13,33,13,13,13,33,33,33,13,33,33,33,33,]),'entity':([10,29,44,46,58,61,],[30,51,51,51,62,51,]),'datatype':([10,25,29,30,44,46,58,61,],[31,45,31,52,31,31,31,31,]),'bool':([10,25,29,30,44,46,58,61,],[34,34,34,34,34,34,34,34,]),'list':([29,44,46,58,61,],[50,56,57,63,66,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program sentence','program',2,'p_program','dparse.py',9),
  ('program -> sentence','program',1,'p_program','dparse.py',10),
  ('sentence -> expression PERIOD','sentence',2,'p_sentence','dparse.py',27),
  ('sentence -> definition PERIOD','sentence',2,'p_sentence','dparse.py',28),
  ('sentence -> modification PERIOD','sentence',2,'p_sentence','dparse.py',29),
  ('sentence -> question QUEST','sentence',2,'p_sentence','dparse.py',30),
  ('expression -> term','expression',1,'p_expression','dparse.py',39),
  ('expression -> expression PLUS term','expression',3,'p_binary_operators','dparse.py',45),
  ('expression -> expression MINUS term','expression',3,'p_binary_operators','dparse.py',46),
  ('term -> term TIMES factor','term',3,'p_binary_operators','dparse.py',47),
  ('term -> term DIVIDED BY factor','term',4,'p_binary_operators','dparse.py',48),
  ('term -> factor','term',1,'p_term','dparse.py',65),
  ('factor -> number','factor',1,'p_factor','dparse.py',71),
  ('definition -> id IS A id','definition',4,'p_definition','dparse.py',77),
  ('definition -> id IS AN id','definition',4,'p_definition','dparse.py',78),
  ('definition -> id ARE COLON list','definition',4,'p_definition','dparse.py',79),
  ('definition -> id IS COLON list','definition',4,'p_definition','dparse.py',80),
  ('definition -> id IS datatype','definition',3,'p_definition','dparse.py',81),
  ('modification -> id OF id IS entity','modification',5,'p_modification','dparse.py',89),
  ('modification -> id OF id IS list','modification',5,'p_modification','dparse.py',90),
  ('question -> WHAT IS id','question',3,'p_question','dparse.py',95),
  ('question -> WHAT ARE list','question',3,'p_question','dparse.py',96),
  ('question -> WHAT IS THE id OF id','question',6,'p_question','dparse.py',97),
  ('question -> WHAT IS id OF id','question',5,'p_question','dparse.py',98),
  ('question -> IS_UP entity datatype','question',3,'p_question_is','dparse.py',108),
  ('entity -> id','entity',1,'p_entity','dparse.py',123),
  ('entity -> datatype','entity',1,'p_entity','dparse.py',124),
  ('datatype -> number','datatype',1,'p_datatype','dparse.py',130),
  ('datatype -> bool','datatype',1,'p_datatype','dparse.py',131),
  ('list -> entity COMMA list','list',3,'p_list','dparse.py',137),
  ('list -> entity','list',1,'p_list','dparse.py',138),
  ('bool -> TRUE','bool',1,'p_bool','dparse.py',147),
  ('bool -> FALSE','bool',1,'p_bool','dparse.py',148),
  ('number -> NUMBER','number',1,'p_number','dparse.py',157),
  ('number -> NEGATIVE NUMBER','number',2,'p_number','dparse.py',158),
  ('id -> ID','id',1,'p_id','dparse.py',167),
]
